{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./authentication.service\";\nclass AuthGuardService {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate() {\n    if (this.authService.token != null) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthenticationService));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac\n});\nexport { AuthGuardService };","map":{"version":3,"names":["AuthGuardService","constructor","router","authService","canActivate","token","navigate","i0","ɵɵinject","i1","Router","i2","AuthenticationService","factory","ɵfac"],"sources":["C:\\Users\\xjuli\\Escritorio\\Programacion\\Angular\\Tweempus\\src\\app\\core\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthenticationService\r\n  ) { }\r\n\r\n  canActivate() {\r\n    if(this.authService.token != null) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":";;;AAKA,MACaA,gBAAgB;EAE3BC,YACUC,MAAc,EACdC,WAAkC;IADlC,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;EACjB;EAEJC,WAAWA,CAAA;IACT,IAAG,IAAI,CAACD,WAAW,CAACE,KAAK,IAAI,IAAI,EAAE;MACjC,OAAO,IAAI;;IAEb,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChC,OAAO,KAAK;EACd;;AAbWN,gBAAgB,C;mBAAhBA,gBAAgB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,qBAAA;AAAA;AAAhBZ,gBAAgB,C;SAAhBA,gBAAgB;EAAAa,OAAA,EAAhBb,gBAAgB,CAAAc;AAAA;SAAhBd,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Author } from '../author/author.model';\nimport { Twimp } from './twimp.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass TwimpService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:3000/twimps';\n    this.urlFavorite = 'http://localhost:3000/author-favorites';\n  }\n  getTwimps() {\n    let twimps = [];\n    return this.httpClient.get(this.url).pipe(map(dbTwimpList => {\n      for (let i in dbTwimpList) {\n        let twimp = new Twimp(dbTwimpList[i].id, 'localhost:4200/twimp/' + dbTwimpList[i].id, new Author(dbTwimpList[i].author), dbTwimpList[i].content, dbTwimpList[i].timestamp);\n        twimps.push(twimp);\n      }\n      return twimps;\n    }), catchError(this.handleError));\n  }\n  setTwimp(twimp) {\n    let dbTwimp = {\n      'id': twimp.id,\n      'author': twimp.author.id,\n      'by': twimp.author.fullName,\n      'content': twimp.content,\n      'timestamp': twimp.timestamp\n    };\n    return this.httpClient.post(this.url, dbTwimp).pipe(catchError(this.handleError));\n  }\n  getFavoritesByAuthor(idAuthor, idTwimp) {\n    return this.httpClient.get(this.urlFavorite + '/' + idAuthor).pipe(map(response => {\n      let favorites = response['twimps'];\n      if (favorites.indexOf(idTwimp) == -1) {\n        return false;\n      } else {\n        return true;\n      }\n    }), catchError(this.handleError));\n  }\n  handleError(error) {\n    let errMsg = error.message ? error.message : error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(errMsg);\n    return throwError(() => errMsg);\n  }\n}\nTwimpService.ɵfac = function TwimpService_Factory(t) {\n  return new (t || TwimpService)(i0.ɵɵinject(i1.HttpClient));\n};\nTwimpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TwimpService,\n  factory: TwimpService.ɵfac\n});\nexport { TwimpService };","map":{"version":3,"names":["throwError","catchError","map","Author","Twimp","TwimpService","constructor","httpClient","url","urlFavorite","getTwimps","twimps","get","pipe","dbTwimpList","i","twimp","id","author","content","timestamp","push","handleError","setTwimp","dbTwimp","fullName","post","getFavoritesByAuthor","idAuthor","idTwimp","response","favorites","indexOf","error","errMsg","message","status","statusText","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\xjuli\\Escritorio\\Programacion\\Angular\\Tweempus\\src\\app\\shared\\twimp\\twimp.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { Author } from '../author/author.model';\r\nimport { Twimp } from './twimp.model';\r\n\r\n@Injectable()\r\nexport class TwimpService {\r\n\r\n  private url: string = 'http://localhost:3000/twimps';\r\n  private urlFavorite: string = 'http://localhost:3000/author-favorites';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getTwimps(): Observable<Twimp[]> {\r\n    let twimps: Twimp[] = [];\r\n\r\n    return this.httpClient.get(this.url).pipe(\r\n      map((dbTwimpList: any) => {\r\n        for (let i in dbTwimpList) {\r\n          let twimp: Twimp = new Twimp(dbTwimpList[i].id, 'localhost:4200/twimp/' + dbTwimpList[i].id, new Author(dbTwimpList[i].author), dbTwimpList[i].content, dbTwimpList[i].timestamp);\r\n          twimps.push(twimp);\r\n        }\r\n        return twimps;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  setTwimp(twimp: Twimp): Observable<any> {\r\n    let dbTwimp: any = {\r\n      'id': twimp.id,\r\n      'author': twimp.author.id,\r\n      'by': twimp.author.fullName,\r\n      'content': twimp.content,\r\n      'timestamp': twimp.timestamp\r\n    };\r\n\r\n    return this.httpClient.post(this.url, dbTwimp).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getFavoritesByAuthor(idAuthor: string, idTwimp: string): Observable<boolean> {\r\n    return this.httpClient.get(this.urlFavorite + '/' + idAuthor).pipe(\r\n      map((response: any) => {\r\n        let favorites: string[] = response['twimps'];\r\n        if (favorites.indexOf(idTwimp) == -1) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  handleError(error: any) {\r\n    let errMsg = (error.message) ? error.message :\r\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n    console.error(errMsg);\r\n    return throwError(() => errMsg);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAEhD,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,KAAK,QAAQ,eAAe;;;AAErC,MACaC,YAAY;EAKvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHtB,KAAAC,GAAG,GAAW,8BAA8B;IAC5C,KAAAC,WAAW,GAAW,wCAAwC;EAExB;EAE9CC,SAASA,CAAA;IACP,IAAIC,MAAM,GAAY,EAAE;IAExB,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAC,IAAI,CAACJ,GAAG,CAAC,CAACK,IAAI,CACvCX,GAAG,CAAEY,WAAgB,IAAI;MACvB,KAAK,IAAIC,CAAC,IAAID,WAAW,EAAE;QACzB,IAAIE,KAAK,GAAU,IAAIZ,KAAK,CAACU,WAAW,CAACC,CAAC,CAAC,CAACE,EAAE,EAAE,uBAAuB,GAAGH,WAAW,CAACC,CAAC,CAAC,CAACE,EAAE,EAAE,IAAId,MAAM,CAACW,WAAW,CAACC,CAAC,CAAC,CAACG,MAAM,CAAC,EAAEJ,WAAW,CAACC,CAAC,CAAC,CAACI,OAAO,EAAEL,WAAW,CAACC,CAAC,CAAC,CAACK,SAAS,CAAC;QACjLT,MAAM,CAACU,IAAI,CAACL,KAAK,CAAC;;MAEpB,OAAOL,MAAM;IACf,CAAC,CAAC,EACFV,UAAU,CAAC,IAAI,CAACqB,WAAW,CAAC,CAC7B;EACH;EAEAC,QAAQA,CAACP,KAAY;IACnB,IAAIQ,OAAO,GAAQ;MACjB,IAAI,EAAER,KAAK,CAACC,EAAE;MACd,QAAQ,EAAED,KAAK,CAACE,MAAM,CAACD,EAAE;MACzB,IAAI,EAAED,KAAK,CAACE,MAAM,CAACO,QAAQ;MAC3B,SAAS,EAAET,KAAK,CAACG,OAAO;MACxB,WAAW,EAAEH,KAAK,CAACI;KACpB;IAED,OAAO,IAAI,CAACb,UAAU,CAACmB,IAAI,CAAC,IAAI,CAAClB,GAAG,EAAEgB,OAAO,CAAC,CAACX,IAAI,CACjDZ,UAAU,CAAC,IAAI,CAACqB,WAAW,CAAC,CAC7B;EACH;EAEAK,oBAAoBA,CAACC,QAAgB,EAAEC,OAAe;IACpD,OAAO,IAAI,CAACtB,UAAU,CAACK,GAAG,CAAC,IAAI,CAACH,WAAW,GAAG,GAAG,GAAGmB,QAAQ,CAAC,CAACf,IAAI,CAChEX,GAAG,CAAE4B,QAAa,IAAI;MACpB,IAAIC,SAAS,GAAaD,QAAQ,CAAC,QAAQ,CAAC;MAC5C,IAAIC,SAAS,CAACC,OAAO,CAACH,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;QACpC,OAAO,KAAK;OACb,MAAM;QACL,OAAO,IAAI;;IAEf,CAAC,CAAC,EACF5B,UAAU,CAAC,IAAI,CAACqB,WAAW,CAAC,CAC7B;EACH;EAEAA,WAAWA,CAACW,KAAU;IACpB,IAAIC,MAAM,GAAID,KAAK,CAACE,OAAO,GAAIF,KAAK,CAACE,OAAO,GAC1CF,KAAK,CAACG,MAAM,GAAG,GAAGH,KAAK,CAACG,MAAM,MAAMH,KAAK,CAACI,UAAU,EAAE,GAAG,cAAc;IACzEC,OAAO,CAACL,KAAK,CAACC,MAAM,CAAC;IACrB,OAAOlC,UAAU,CAAC,MAAMkC,MAAM,CAAC;EACjC;;AAvDW7B,YAAY,C;mBAAZA,YAAY,EAAAkC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZrC,YAAY,C;SAAZA,YAAY;EAAAsC,OAAA,EAAZtC,YAAY,CAAAuC;AAAA;SAAZvC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}